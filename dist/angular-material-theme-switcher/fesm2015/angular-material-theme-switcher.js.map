{"version":3,"file":"angular-material-theme-switcher.js","sources":["ng://angular-material-theme-switcher/lib/service/am-theme.service.ts","ng://angular-material-theme-switcher/lib/component/color-switcher/color-switcher.component.ts","ng://angular-material-theme-switcher/lib/component/dark-switcher/dark-switcher.component.ts","ng://angular-material-theme-switcher/lib/directive/container.directive.ts","ng://angular-material-theme-switcher/lib/directive/active.directive.ts","ng://angular-material-theme-switcher/lib/directive/custom.directive.ts","ng://angular-material-theme-switcher/lib/directive/dark.directive.ts","ng://angular-material-theme-switcher/lib/directive/light.directive.ts","ng://angular-material-theme-switcher/lib/angular-material-theme-switcher.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class AmThemeService {\n\n  themes: string[] = [\n    'deeppurple-amber',\n    'indigo-pink',\n    'pink-bluegrey',\n    'purple-green',\n  ];\n\n  colorTheme$ = new BehaviorSubject<string>('indigo-pink');\n  isDark$ = new BehaviorSubject<boolean>(false);\n\n  constructor() { }\n\n}\n","import {\n  Component,\n  Input,\n  OnInit\n} from '@angular/core';\n\nimport { AmThemeService } from '../../service/am-theme.service';\n\n@Component({\n  selector: 'am-theme-color-switcher',\n  templateUrl: './color-switcher.component.html',\n  styleUrls: ['./color-switcher.component.css']\n})\nexport class ColorSwitcherComponent implements OnInit {\n\n  @Input() colorTheme: string = '';\n\n  @Input() themes: string[] = [];\n\n  @Input() isUseLibraryThemes: boolean = true;\n\n  constructor(private amThemeService: AmThemeService) { }\n\n  ngOnInit() {\n    if (this.isUseLibraryThemes) {\n      this.amThemeService.themes.forEach(colorTheme => this.themes.push(colorTheme));\n\n      if (this.colorTheme === '') {\n        this.amThemeService.colorTheme$.subscribe(colorTheme => this.colorTheme = colorTheme);\n      }\n    } else {\n      if (this.colorTheme === '') {\n        this.colorTheme = this.themes[0];\n      }\n    }\n\n    if (this.themes.indexOf(this.colorTheme) === -1) {\n      this.themes.push(this.colorTheme);\n    }\n\n    if (this.colorTheme !== '') {\n      this.amThemeService.colorTheme$.next(this.colorTheme);\n    }\n  }\n\n  setColorTheme(colorTheme: string) {\n    this.amThemeService.colorTheme$.next(colorTheme);\n    this.colorTheme = colorTheme;\n  }\n\n}\n","import {\n  Component,\n  Input,\n  OnInit\n} from '@angular/core';\n\nimport { AmThemeService } from '../../service/am-theme.service';\n\n@Component({\n  selector: 'am-theme-dark-switcher',\n  templateUrl: './dark-switcher.component.html',\n  styleUrls: ['./dark-switcher.component.css']\n})\nexport class DarkSwitcherComponent implements OnInit {\n\n  @Input() isDark: boolean = false;\n\n  constructor(private amThemeService: AmThemeService) { }\n\n  ngOnInit() {\n    this.amThemeService.isDark$.next(this.isDark);\n  }\n\n  toggleIsDark(isDark: boolean) {\n    this.amThemeService.isDark$.next(isDark);\n  }\n\n}\n","import {\n  Directive,\n  HostBinding,\n  Input,\n  OnInit\n} from '@angular/core';\n\nimport { OverlayContainer } from '@angular/cdk/overlay';\n\nimport { AmThemeService } from '../service/am-theme.service';\n\n@Directive({\n  selector: '[amThemeContainer]'\n})\nexport class ContainerDirective implements OnInit {\n\n  oldTheme: string;\n\n  @Input() colorTheme: string = '';\n\n  @Input() isDark: boolean;\n\n  @HostBinding('class') themeActiveCssClass;\n\n  constructor(\n    private overlayContainer: OverlayContainer,\n    private amThemeService: AmThemeService\n  ) { }\n\n  ngOnInit() {\n    if (this.colorTheme !== '') {\n      if (typeof this.isDark !== 'undefined') {\n        this.setTheme(this.colorTheme, this.isDark);\n      } else {\n        this.amThemeService.isDark$.subscribe((isDark) => {\n          this.setTheme(this.colorTheme, isDark);\n        });\n      }\n    } else {\n      this.amThemeService.colorTheme$.subscribe((colorTheme) => {\n        if (typeof this.isDark !== 'undefined') {\n          this.setTheme(colorTheme, this.isDark);\n        } else {\n          this.amThemeService.isDark$.subscribe((isDark) => {\n            this.setTheme(colorTheme, isDark);\n          });\n        }\n      });\n    }\n  }\n\n  setTheme(colorTheme, isDark) {\n    let theme = colorTheme + (isDark ? '-dark' : '-light');\n\n    this.themeActiveCssClass = theme;\n\n    const overlayClassList = this.overlayContainer.getContainerElement().classList\n    if (overlayClassList.contains(this.oldTheme)) {\n      overlayClassList.replace(this.oldTheme, theme)\n    }\n    else {\n      overlayClassList.add(theme)\n    }\n\n    this.oldTheme = theme;\n  }\n\n}\n","import {\n  Directive,\n  HostBinding,\n  OnInit\n} from '@angular/core';\n\nimport { OverlayContainer } from '@angular/cdk/overlay';\n\nimport { AmThemeService } from '../service/am-theme.service';\n\n@Directive({\n  selector: '[amThemeActive]'\n})\nexport class ActiveDirective implements OnInit {\n\n  oldTheme: string;\n\n  @HostBinding('class') themeActiveCssClass;\n\n  constructor(\n    private overlayContainer: OverlayContainer,\n    private amThemeService: AmThemeService\n  ) { }\n\n  ngOnInit() {\n    this.amThemeService.colorTheme$.subscribe((colorTheme) => {\n      this.amThemeService.isDark$.subscribe((isDark) => {\n        this.setTheme(colorTheme, isDark);\n      });\n    });\n  }\n\n  setTheme(colorTheme, isDark) {\n    let theme = colorTheme + (isDark ? '-dark' : '-light');\n\n    this.themeActiveCssClass = theme;\n\n    const overlayClassList = this.overlayContainer.getContainerElement().classList\n    if (overlayClassList.contains(this.oldTheme)) {\n      overlayClassList.replace(this.oldTheme, theme)\n    }\n    else {\n      overlayClassList.add(theme)\n    }\n\n    this.oldTheme = theme;\n  }\n\n}\n","import {\n  Directive,\n  HostBinding,\n  Input,\n  OnInit\n} from '@angular/core';\n\nimport { OverlayContainer } from '@angular/cdk/overlay';\n@Directive({\n  selector: '[amThemeCustom]'\n})\nexport class CustomDirective implements OnInit {\n\n  oldTheme: string;\n\n  @Input() colorTheme: string = '';\n\n  @Input() isDark: boolean = false;\n\n  @HostBinding('class') themeActiveCssClass;\n\n  constructor(\n    private overlayContainer: OverlayContainer\n  ) { }\n\n  ngOnInit() {\n    this.setTheme(this.colorTheme, this.isDark);\n  }\n\n  setTheme(colorTheme, isDark) {\n    let theme = colorTheme + (isDark ? '-dark' : '-light');\n\n    this.themeActiveCssClass = theme;\n\n    const overlayClassList = this.overlayContainer.getContainerElement().classList\n    if (overlayClassList.contains(this.oldTheme)) {\n      overlayClassList.replace(this.oldTheme, theme)\n    }\n    else {\n      overlayClassList.add(theme)\n    }\n\n    this.oldTheme = theme;\n  }\n\n}\n","import {\n  Directive,\n  HostBinding,\n  OnInit\n} from '@angular/core';\n\nimport { OverlayContainer } from '@angular/cdk/overlay';\n\nimport { AmThemeService } from '../service/am-theme.service';\n\n@Directive({\n  selector: '[amThemeDark]'\n})\nexport class DarkDirective implements OnInit {\n\n  oldTheme: string;\n\n  @HostBinding('class') themeActiveCssClass;\n\n  constructor(\n    private overlayContainer: OverlayContainer,\n    private amThemeService: AmThemeService\n  ) { }\n\n  ngOnInit() {\n    this.amThemeService.colorTheme$.subscribe((colorTheme) => {\n      this.setTheme(colorTheme);\n    });\n  }\n\n  setTheme(colorTheme) {\n    let theme = colorTheme + '-dark';\n\n    this.themeActiveCssClass = theme;\n\n    const overlayClassList = this.overlayContainer.getContainerElement().classList\n    if (overlayClassList.contains(this.oldTheme)) {\n      overlayClassList.replace(this.oldTheme, theme)\n    }\n    else {\n      overlayClassList.add(theme)\n    }\n\n    this.oldTheme = theme;\n  }\n\n}\n","import {\n  Directive,\n  HostBinding,\n  OnInit\n} from '@angular/core';\n\nimport { OverlayContainer } from '@angular/cdk/overlay';\n\nimport { AmThemeService } from '../service/am-theme.service';\n\n@Directive({\n  selector: '[amThemeLight]'\n})\nexport class LightDirective implements OnInit {\n\n  oldTheme: string;\n\n  @HostBinding('class') themeActiveCssClass;\n\n  constructor(\n    private overlayContainer: OverlayContainer,\n    private amThemeService: AmThemeService\n  ) { }\n\n  ngOnInit() {\n    this.amThemeService.colorTheme$.subscribe((colorTheme) => {\n      this.setTheme(colorTheme);\n    });\n  }\n\n  setTheme(colorTheme) {\n    let theme = colorTheme + '-light';\n\n    this.themeActiveCssClass = theme;\n\n    const overlayClassList = this.overlayContainer.getContainerElement().classList\n    if (overlayClassList.contains(this.oldTheme)) {\n      overlayClassList.replace(this.oldTheme, theme)\n    }\n    else {\n      overlayClassList.add(theme)\n    }\n\n    this.oldTheme = theme;\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport {\n  MatButtonModule,\n  MatGridListModule,\n  MatIconModule,\n  MatMenuModule,\n  MatSlideToggleModule,\n  MatTooltipModule\n} from '@angular/material';\n\nimport { OverlayModule } from \"@angular/cdk/overlay\";\n\nimport { ColorSwitcherComponent } from './component/color-switcher/color-switcher.component';\nimport { DarkSwitcherComponent } from './component/dark-switcher/dark-switcher.component';\n\nimport { ContainerDirective } from './directive/container.directive';\nimport { ActiveDirective } from './directive/active.directive';\nimport { CustomDirective } from './directive/custom.directive';\nimport { DarkDirective } from './directive/dark.directive';\nimport { LightDirective } from './directive/light.directive';\n\nimport { AmThemeService } from './service/am-theme.service';\n\n\n@NgModule({\n  declarations: [\n    ColorSwitcherComponent,\n    DarkSwitcherComponent,\n    ContainerDirective,\n    ActiveDirective,\n    CustomDirective,\n    DarkDirective,\n    LightDirective\n  ],\n  providers: [\n    AmThemeService\n  ],\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatIconModule,\n    MatMenuModule,\n    MatSlideToggleModule,\n    MatTooltipModule\n  ],\n  exports: [\n    ColorSwitcherComponent,\n    DarkSwitcherComponent,\n    ContainerDirective,\n    ActiveDirective,\n    CustomDirective,\n    DarkDirective,\n    LightDirective\n  ]\n})\nexport class AngularMaterialThemeSwitcherModule { }\n"],"names":[],"mappings":"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"}